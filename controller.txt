# Velocity Controller


  <joint name="left_finger_1_joint">
     <command_interface name="velocity">
         <param name="min">-3.14</param>
         <param name="max">3.14</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

  <joint name="left_finger_2_joint">
     <command_interface name="velocity">
         <param name="min">-3.14</param>
         <param name="max">3.14</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

   <joint name="right_finger_1_joint">
     <command_interface name="velocity">
         <param name="min">-3.14</param>
         <param name="max">3.14</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

  <joint name="right_finger_2_joint">
     <command_interface name="velocity">
         <param name="min">-3.14</param>
         <param name="max">3.14</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

 #Velocity Controllers

  <joint name="link_1_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

  <joint name="link_2_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

   <joint name="link_3_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

  <joint name="link_4_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

   <joint name="link_5_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>

   <joint name="link_6_joint">
     <command_interface name="velocity">
         <param name="min">-10.0</param>
         <param name="max">10.0</param>
     </command_interface>
     <state_interface name="position"/>
     <state_interface name="velocity"/>
 </joint>



 gripper_velocity_controller:
    ros__parameters:
        joints:
            - left_finger_1_joint
            - right_finger_1_joint
            - left_finger_2_joint
            - right_finger_2_joint
        interface_name: velocity
        command_interfaces:
            - velocity
        state_interfaces:
            - position
            - velocity
            - effort

velocity_controller:
    ros__parameters:
        joints:
            - link_1_joint 
            - link_2_joint
            - link_3_joint
            - link_4_joint
            - link_5_joint
            - link_6_joint
        interface_name: velocity
        command_interfaces:
            - velocity
        state_interfaces:
            - position
            - velocity
            - effort



        velocity_controller:
            type: velocity_controllers/JointGroupVelocityController

                gripper_velocity_controller:
            type: gripper_velocity_controllers/JointGroupPositionController



    # Joint Velocity Controller Node
    robot_velocity_controller_spawner = Node(
        package="controller_manager",
        executable="spawner",
        arguments=["velocity_controller", "--controller-manager", "/controller_manager"],
    )

    # Joint Velocity Controller Node
    robot_gripper_velocity_controller_spawner = Node(
        package="controller_manager",
        executable="spawner",
        arguments=["gripper_velocity_controller", "--controller-manager", "/controller_manager"],
    )


    # Delay start of robot_controller after `joint_state_broadcaster`
    delay_robot_velocity_controller_spawner_after_joint_state_broadcaster_spawner = RegisterEventHandler(
        event_handler=OnProcessExit(
            target_action=joint_state_broadcaster_spawner,
            on_exit=[robot_velocity_controller_spawner],
        )
    )

    # Delay start of robot_controller after `joint_state_broadcaster`
    delay_robot_gripper_velocity_controller_spawner_after_joint_state_broadcaster_spawner = RegisterEventHandler(
        event_handler=OnProcessExit(
            target_action=joint_state_broadcaster_spawner,
            on_exit=[robot_gripper_velocity_controller_spawner],
        )
    )


                delay_robot_velocity_controller_spawner_after_joint_state_broadcaster_spawner,
            delay_robot_gripper_velocity_controller_spawner_after_joint_state_broadcaster_spawner,